name: halcyon

services:
    halcyon:
        image: halcyon:dev
        build:
            context: .
            target: dev
            args:
                VERSION: 1.0.0-docker
        command: npm run dev
        environment:
            WATCHPACK_POLLING: true
            NEXT_SERVER_API_URL: http://host.docker.internal:5257
            NEXT_PUBLIC_API_URL: http://localhost:5257
            JWT_SECURITY_KEY: super_secret_key_that_should_be_changed
            JWT_ISSUER: HalcyonApi
            JWT_AUDIENCE: HalcyonClient
            AUTH_URL: http://localhost:3000
            AUTH_SECRET: super_secret_key_that_should_be_changed
        ports:
            - 3000:3000
        volumes:
            - ./src:/app/src
            - ./public:/app/public

    halcyon-api:
        image: ghcr.io/chrispoulter/halcyon-api:latest
        environment:
            ConnectionStrings__Database: Host=host.docker.internal;Port=5432;Database=halcyon;Username=postgres;Password=password
            Email__SmtpServer: host.docker.internal
            Serilog__MinimumLevel__Override__Microsoft.AspNetCore.DataProtection: Error
        ports:
            - 5257:8080
            - 7257:8081
        depends_on:
            postgres:
                condition: service_healthy

    postgres:
        image: postgres:16.4-alpine
        user: postgres
        environment:
            POSTGRES_PASSWORD: password
        ports:
            - 5432:5432
        volumes:
            - postgres:/var/lib/postgresql/data
        healthcheck:
            test: [ 'CMD', 'pg_isready' ]
            interval: 10s
            timeout: 5s
            retries: 3

    mailhog:
        image: mailhog/mailhog:v1.0.1
        environment:
            MH_STORAGE: maildir
            MH_MAILDIR_PATH: /home/mailhog
        ports:
            - 1025:1025
            - 8025:8025
        volumes:
            - mailhog:/home/mailhog

volumes:
    postgres:
    mailhog:
