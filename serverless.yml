service: halcyon

useDotenv: true

provider:
    name: aws
    runtime: nodejs12.x
    stage: dev
    region: eu-west-1
    memorySize: 1024
    logRetentionInDays: 3
    apiGateway:
        shouldStartNameWithService: true
    environment:
        FAUNADB_SECRET: ${env:FAUNADB_SECRET, ''}
        JWT_SECURITYKEY: ${env:JWT_SECURITYKEY, ''}
        JWT_AUDIENCE: ${env:JWT_AUDIENCE, ''}
        JWT_ISSUER: ${env:JWT_ISSUER, ''}
        JWT_EXPIRESIN: ${env:JWT_EXPIRESIN, ''}
        MAILGUN_DOMAIN: ${env:MAILGUN_DOMAIN, ''}
        MAILGUN_APIKEY: ${env:MAILGUN_APIKEY, ''}
        MAILGUN_NOREPLY: ${env:MAILGUN_NOREPLY, ''}
        SEED_EMAILADDRESS: ${env:SEED_EMAILADDRESS, ''}
        SEED_PASSWORD: ${env:SEED_PASSWORD, ''}
        REACT_APP_GRAPHQL_URL: ${cf:halcyon-${opt:stage, self:provider.stage}.ServiceEndpoint, ''}

plugins:
    - serverless-webpack
    - serverless-offline
    - serverless-dotenv-plugin
    - serverless-build-client
    - serverless-s3-sync

functions:
    app:
        handler: api/index.handler
        events:
            - http:
                  path: /
                  method: ANY
                  cors: true
            - http:
                  path: /{proxy+}
                  method: ANY
                  cors: true

custom:
    serverless-offline:
        httpPort: 3001
        noPrependStageInUrl: true

    s3Sync:
        - bucketNameKey: ClientBucketOutputKey
          localDir: build
          deleteRemoved: true

resources:
    Resources:
        ClientBucket:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: halcyon-${opt:stage, self:provider.stage}

    Outputs:
        ClientBucketOutputKey:
            Value: !Ref ClientBucket
