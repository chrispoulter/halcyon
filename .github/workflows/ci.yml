name: CI

on:
    push:
        branches:
            - '**'
    pull_request:
        branches:
            - '**'
    workflow_dispatch:

concurrency: ci-${{ github.ref }}

env:
    IMAGE_NAME: halcyon-node

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v0.9.7
              with:
                  versionSpec: 5.x

            - name: Determine Version
              uses: gittools/actions/gitversion/execute@v0.9.7
              with:
                  useConfigFile: true

            - name: Set Environment Variables
              run: |
                  echo "VERSION=$(echo ${{ env.GITVERSION_SEMVER }})" >> $GITHUB_ENV
                  echo "STAGE=$(echo ${{ env.GITVERSION_ESCAPEDBRANCHNAME }})" >> $GITHUB_ENV

            # - name: Build Image
            #   run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

            - name: Registry Login
              run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # - name: Build
            #   run: |
            #       IMAGE_ID=ghcr.io/${{ github.repository_owner }}/halcyon-node
            #       IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            #       VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            #       [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
            #       [ "$VERSION" == "master" ] && VERSION=latest
            #       echo IMAGE_ID=$IMAGE_ID
            #       echo VERSION=$VERSION
            #       docker build . --file Dockerfile --tag halcyon-node --build-arg VERSION=${{ env.GITVERSION_SEMVER }} --build-arg STAGE=${{ env.GITVERSION_ESCAPEDBRANCHNAME }}
            #       docker tag halcyon-node $IMAGE_ID:$VERSION
            #       docker push $IMAGE_ID:$VERSION

            - name: Build
              run: |
                  docker build . -t ghcr.io/${{ github.repository_owner }}/halcyon-node:${{ env.GITVERSION_SEMVER }} --build-arg VERSION=${{ env.GITVERSION_SEMVER }} --build-arg STAGE=${{ env.GITVERSION_ESCAPEDBRANCHNAME }}
                  docker push ghcr.io/${{ github.repository_owner }}/halcyon-node:${{ env.GITVERSION_SEMVER }}

            # - name: Azure Login
            #   uses: azure/login@v1
            #   with:
            #       creds: ${{ secrets.AZURE_CREDENTIALS }}

            # - name: Deploy ARM Template
            #   uses: azure/arm-deploy@v1
            #   with:
            #       resourceGroupName: halcyon
            #       template: ./azuredeploy.json
            #       parameters: plan="halcyon-plan"
            #           web="halcyon-node-${{ env.GITVERSION_ESCAPEDBRANCHNAME }}-web"
            #           registryUrl="https://ghcr.io"
            #           registryUserName="${{ github.actor }}"
            #           registryPassword="${{ github.token }}"
            #           dbHost="${{ secrets.DB_HOST }}"
            #           dbUser="${{ secrets.DB_USER }}"
            #           dbPassword="${{ secrets.DB_PASSWORD }}"
            #           dbDatabase="halcyon-node-${{ env.GITVERSION_ESCAPEDBRANCHNAME }}"
            #           dbSSL="${{ secrets.DB_SSL }}"
            #           emailSmtpServer="${{ secrets.EMAIL_SMTP_SERVER }}"
            #           emailSmtpPort="${{ secrets.EMAIL_SMTP_PORT }}"
            #           emailSmtpUserName="${{ secrets.EMAIL_SMTP_USERNAME }}"
            #           emailSmtpPassword="${{ secrets.EMAIL_SMTP_PASSWORD }}"
            #           emailNoReplyAddress="${{ secrets.EMAIL_NO_REPLY_ADDRESS }}"
            #           jwtSecurityKey="${{ secrets.JWT_SECURITY_KEY }}"
            #           jwtIssuer="${{ secrets.JWT_ISSUER }}"
            #           jwtAudience="${{ secrets.JWT_AUDIENCE }}"
            #           jwtExpiresIn="${{ secrets.JWT_EXPIRES_IN }}"
            #           seedEmailAddress="${{ secrets.SEED_EMAIL_ADDRESS }}"
            #           seedPassword="${{ secrets.SEED_PASSWORD }}"

            # - name: Deploy
            #   uses: azure/webapps-deploy@v2
            #   with:
            #       app-name: halcyon-node-${{ env.GITVERSION_ESCAPEDBRANCHNAME }}-web
            #       images: ${{ secrets.REGISTRY_URL }}/halcyon-node:${{ env.GITVERSION_SEMVER }}

            # - name: Azure Logout
            #   run: |
            #       az logout
            #       az cache purge
            #       az account clear
