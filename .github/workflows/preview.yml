name: Preview Build and Publish

on:
    pull_request:
        branches: ['main']
    workflow_dispatch:

env:
    HUSKY: 0
    NEXT_TELEMETRY_DISABLED: 1

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  cache: 'npm'

            - name: Build and test
              run: |
                  npm ci
                  npm run lint
                  npm test

    publish:
        runs-on: ubuntu-latest
        needs: build
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v3.1.1
              with:
                  versionSpec: '6.x'

            - name: Determine Version
              id: version_step
              uses: gittools/actions/gitversion/execute@v3.1.1

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub container registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ github.token }}

            - name: Lowercase the repo name and username
              run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

            - name: Build and push container image to registry
              uses: docker/build-push-action@v5
              with:
                  file: ./Dockerfile
                  tags: |
                      ghcr.io/${{ env.REPO }}:${{ steps.version_step.outputs.semVer }}
                      ghcr.io/${{ env.REPO }}:preview
                  context: .
                  push: true
                  provenance: false
                  build-args: |
                      VERSION=${{ steps.version_step.outputs.semVer }}
